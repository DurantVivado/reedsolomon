// Code generated by command: go run gen.go -out galois_gen_amd64.s -stubs galois_gen_amd64.go. DO NOT EDIT.

// +build !appengine
// +build !noasm
// +build gc

package reedsolomon

// mulAvxTwoXor_1x1 takes 1 inputs and produces 1 outputs.
//go:noescape
func mulAvxTwoXor_1x1(low [1][16]byte, high [1][16]byte, in [1][]byte, out [1][]byte)

// mulAvxTwo_1x1 takes 1 inputs and produces 1 outputs.
// The output is initialized to 0.
//go:noescape
func mulAvxTwo_1x1(low [1][16]byte, high [1][16]byte, in [1][]byte, out [1][]byte)

// mulAvxTwoXor_1x2 takes 1 inputs and produces 2 outputs.
//go:noescape
func mulAvxTwoXor_1x2(low [2][16]byte, high [2][16]byte, in [1][]byte, out [2][]byte)

// mulAvxTwo_1x2 takes 1 inputs and produces 2 outputs.
// The output is initialized to 0.
//go:noescape
func mulAvxTwo_1x2(low [2][16]byte, high [2][16]byte, in [1][]byte, out [2][]byte)

// mulAvxTwoXor_1x3 takes 1 inputs and produces 3 outputs.
//go:noescape
func mulAvxTwoXor_1x3(low [3][16]byte, high [3][16]byte, in [1][]byte, out [3][]byte)

// mulAvxTwo_1x3 takes 1 inputs and produces 3 outputs.
// The output is initialized to 0.
//go:noescape
func mulAvxTwo_1x3(low [3][16]byte, high [3][16]byte, in [1][]byte, out [3][]byte)

// mulAvxTwoXor_2x1 takes 2 inputs and produces 1 outputs.
//go:noescape
func mulAvxTwoXor_2x1(low [2][16]byte, high [2][16]byte, in [2][]byte, out [1][]byte)

// mulAvxTwo_2x1 takes 2 inputs and produces 1 outputs.
// The output is initialized to 0.
//go:noescape
func mulAvxTwo_2x1(low [2][16]byte, high [2][16]byte, in [2][]byte, out [1][]byte)

// mulAvxTwoXor_2x2 takes 2 inputs and produces 2 outputs.
//go:noescape
func mulAvxTwoXor_2x2(low [4][16]byte, high [4][16]byte, in [2][]byte, out [2][]byte)

// mulAvxTwo_2x2 takes 2 inputs and produces 2 outputs.
// The output is initialized to 0.
//go:noescape
func mulAvxTwo_2x2(low [4][16]byte, high [4][16]byte, in [2][]byte, out [2][]byte)

// mulAvxTwoXor_3x1 takes 3 inputs and produces 1 outputs.
//go:noescape
func mulAvxTwoXor_3x1(low [3][16]byte, high [3][16]byte, in [3][]byte, out [1][]byte)

// mulAvxTwo_3x1 takes 3 inputs and produces 1 outputs.
// The output is initialized to 0.
//go:noescape
func mulAvxTwo_3x1(low [3][16]byte, high [3][16]byte, in [3][]byte, out [1][]byte)

// mulAvxTwoXor_4x1 takes 4 inputs and produces 1 outputs.
//go:noescape
func mulAvxTwoXor_4x1(low [4][16]byte, high [4][16]byte, in [4][]byte, out [1][]byte)

// mulAvxTwo_4x1 takes 4 inputs and produces 1 outputs.
// The output is initialized to 0.
//go:noescape
func mulAvxTwo_4x1(low [4][16]byte, high [4][16]byte, in [4][]byte, out [1][]byte)

// mulAvxTwoXor_5x1 takes 5 inputs and produces 1 outputs.
//go:noescape
func mulAvxTwoXor_5x1(low [5][16]byte, high [5][16]byte, in [5][]byte, out [1][]byte)

// mulAvxTwo_5x1 takes 5 inputs and produces 1 outputs.
// The output is initialized to 0.
//go:noescape
func mulAvxTwo_5x1(low [5][16]byte, high [5][16]byte, in [5][]byte, out [1][]byte)

// mulAvxTwoXor_6x1 takes 6 inputs and produces 1 outputs.
//go:noescape
func mulAvxTwoXor_6x1(low [6][16]byte, high [6][16]byte, in [6][]byte, out [1][]byte)

// mulAvxTwo_6x1 takes 6 inputs and produces 1 outputs.
// The output is initialized to 0.
//go:noescape
func mulAvxTwo_6x1(low [6][16]byte, high [6][16]byte, in [6][]byte, out [1][]byte)
